name: Release to Dev

on:
  push:
    branches: [main]

jobs:
  test-nextjs:
    name: Test and Lint Next.js
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Copy environment variables
        run: cp .env.example .env

      - name: Run ESLint
        run: pnpm run lint

      - name: Run TypeScript type checking
        run: pnpm run typecheck

      - name: Run tests
        run: pnpm run test

      - name: Build application
        run: pnpm run build

  test-engine:
    name: Test and Lint Engine Service
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./engine

    steps:
      - uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'

      - name: Install UV
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Add UV to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Create virtual environment
        run: uv venv

      - name: Install dependencies
        run: uv pip install -e ".[dev]"

      - name: Run Ruff linting
        run: uv run ruff check .

      - name: Run Ruff formatting check
        run: uv run ruff format --check .

      - name: Run MyPy type checking
        run: uv run mypy .

      - name: Run tests
        run: uv run pytest -v --cov=. --cov-report=term-missing

  migrate-database:
    name: Run Database Migrations
    needs: test-nextjs
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Run database migrations
        run: pnpm run db:migrate
        env:
          POSTGRES_URL: ${{ secrets.POSTGRES_URL }}

  deploy-engine:
    name: Deploy Python Engine to Fly.io
    needs: [test-nextjs, test-engine, migrate-database]
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v4

      - name: Setup Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        run: |
          cd engine
          flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
