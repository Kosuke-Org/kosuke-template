name: Cursor

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  pull_request_review:
    types: [submitted]

jobs:
  code-review:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@cursor')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@cursor')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@cursor'))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: read

    steps:
      - name: Add reaction to trigger comment
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'eyes'
            });

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Cursor CLI
        run: |
          curl https://cursor.com/install -fsS | bash
          echo "$HOME/.cursor/bin" >> $GITHUB_PATH

      - name: Perform automated code review
        id: review
        env:
          CURSOR_API_KEY: ${{ secrets.CURSOR_API_KEY }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cursor-agent --force --model gpt-4o --output-format=text 'You are an expert code reviewer for a Next.js 15 + React 19 project. Read and follow ALL rules from .cursor/rules/ in this repository.

          GitHub Context:
          - Repository: ${{ github.repository }}
          - Event: ${{ github.event_name }}

          Code Review Tasks:
          1. Review PR diff for code quality and architecture patterns
          2. Check: type safety, error handling, auth/data ownership, DB queries, API patterns
          3. Ignore: formatting, style, naming (pre-commit handles these)
          4. Identify actual bugs, security issues, pattern violations

          Response Format:
          - If no issues: "✅ Code review passed. No issues found."
          - If issues found: List each issue with: file path, specific problem, suggested fix' > review_output.txt
          cat review_output.txt

      - name: Post review comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const review = fs.readFileSync('review_output.txt', 'utf8');

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `## 🔍 Cursor Code Review\n\n${review}`
            });
